"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.calcLimits=exports.getStartLimits=exports.isSmallestLimits=exports.isWithinLimits=exports.isLimits=void 0;const obray_1=require("../../lib/obray"),board_1=require("./board");function isLimits(i){return obray_1.hasKey(i,"minRow")&&obray_1.hasKey(i,"maxRow")&&obray_1.hasKey(i,"minCol")&&obray_1.hasKey(i,"maxCol")&&!isLimitsSmallerThanAllowed(i)&&!isLimitsGreaterThanAllowed(i)}function isWithinLimits(i,o){return o.minRow<=i.row&&i.row<=o.maxRow&&o.minCol<=i.col&&i.col<=o.maxCol}function isSmallestLimits(i){return i.maxRow-i.minRow===MIN_DIFF_BETWEEN_MIN_MAX&&i.maxCol-i.minCol===MIN_DIFF_BETWEEN_MIN_MAX}function getStartLimits(){const i=board_1.getBoardSize();return{minRow:0,maxRow:i.numOfRows-1,minCol:0,maxCol:i.numOfCols-1}}function calcLimits(i,o){if(isSmallestLimits(o))return o;const l=calcPureLimits(i);return isLimitsSmallerThanAllowed(l)?increaseToMinSize(l,o):l}exports.isLimits=isLimits,exports.isWithinLimits=isWithinLimits,exports.isSmallestLimits=isSmallestLimits,exports.getStartLimits=getStartLimits,exports.calcLimits=calcLimits;const MIN_DIFF_BETWEEN_MIN_MAX=2;function isLimitsGreaterThanAllowed(i){const o=board_1.getBoardSize();return i.maxRow-i.minRow>=o.numOfRows||i.maxCol-i.minCol>=o.numOfCols}function isLimitsSmallerThanAllowed(i){return isRowsSmallerThanAllowed(i)||isColsSmallerThanAllowed(i)}function isRowsSmallerThanAllowed(i){return i.maxRow-i.minRow<MIN_DIFF_BETWEEN_MIN_MAX}function isColsSmallerThanAllowed(i){return i.maxCol-i.minCol<MIN_DIFF_BETWEEN_MIN_MAX}function calcPureLimits(i){let o={minRow:i[0].position.row,maxRow:i[0].position.row,minCol:i[0].position.col,maxCol:i[0].position.col};for(let l=1,t=i.length;l<t;l++)o.minRow>i[l].position.row&&(o.minRow=i[l].position.row),o.maxRow<i[l].position.row&&(o.maxRow=i[l].position.row),o.minCol>i[l].position.col&&(o.minCol=i[l].position.col),o.maxCol<i[l].position.col&&(o.maxCol=i[l].position.col);return o}function increaseToMinSize(i,o){for(;isLimitsSmallerThanAllowed(i);)isRowsSmallerThanAllowed(i)&&i.minRow>o.minRow&&(i.minRow-=1),isRowsSmallerThanAllowed(i)&&i.maxRow<o.maxRow&&(i.maxRow+=1),isColsSmallerThanAllowed(i)&&i.minCol>o.minCol&&(i.minCol-=1),isColsSmallerThanAllowed(i)&&i.maxCol<o.maxCol&&(i.maxCol+=1);return i}